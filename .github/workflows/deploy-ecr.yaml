name: Build and Deploy to ECR

on:
  workflow_run:
    workflows: ["Tests"]
    types:
      - completed
    conclusion: success

env:
  AWS_REGION: "us-east-1"

jobs:
  build-and-deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Build with Maven
        run: mvn clean install -DskipTests -Pdocker -q

      - name: Build Docker Image
        run: docker-compose build customers

      - name: Get Docker Image ID
        id: image_id
        run: echo "::set-output name=image_id::$(docker images | grep customers | awk '{print $3}' | uniq)"

      - name: Get AWS Account ID
        id: aws_account
        run: echo "::set-output name=account_id::$(aws sts get-caller-identity --query Account --output text)"

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.aws_account.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Tag Docker Image
        run: docker tag ${{ steps.image_id.outputs.image_id }} ${{ steps.aws_account.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/customers:1.0

      - name: Push Docker Image to ECR
        run: docker push ${{ steps.aws_account.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/customers:1.0

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name fiap_fast_food_eks

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
      - name: Deploy Microservice on K8S
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.TARGET_REPO_PAT }}
          repository: FIAP-6SOAT-G10/fiap-fast-food-ms-cliente-k8s
          event-type: trigger-deploy
