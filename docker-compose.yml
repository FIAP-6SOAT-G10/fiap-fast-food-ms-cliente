services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_DB: customers
      POSTGRES_USER: tech
      POSTGRES_PASSWORD: tech_passwd
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    networks:
      - customersnetwork
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U tech" ]
      interval: 5s
      timeout: 5s
      retries: 10

  customers:
    container_name: customers
    build:
      context: .
    image: customers_app/customers
    ports:
      - "8080:8080"
    networks:
      - customersnetwork
    depends_on:
      postgres:
        condition: service_healthy

networks:
  customersnetwork:
    name: customersnetwork
    driver: bridge

sonarqube:
  image: sonarqube:latest
  container_name: sonarqube
  ports:
    - "9000:9000"
  environment:
    - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
    - SONAR_JDBC_USERNAME=sonar
    - SONAR_JDBC_PASSWORD=sonar
  depends_on:
    - db

db:
  image: postgres:latest
  container_name: sonarqube_db
  environment:
    - POSTGRES_USER=sonar
    - POSTGRES_PASSWORD=sonar
    - POSTGRES_DB=sonar
  ports:
    - "5432:5432"
